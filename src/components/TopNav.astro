---
const navItems = [
  { href: '#home', label: 'Inicio' },
  { href: '#sobre', label: 'Sobre la Serie' },
  { href: '#produccion', label: 'Producción' },
  { href: '#equipo', label: 'Equipo' },
  { href: '#medios', label: 'Medios' },
  { href: '#prensa', label: 'Prensa' },
  { href: '#contacto', label: 'Contacto' },
];
---

<nav class="fixed top-0 left-0 right-0 z-50 bg-background-primary/95 backdrop-blur-md border-b border-border">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="flex justify-between items-center h-16">
      <!-- Logo -->
      <div class="flex-shrink-0">
        <a href="#home" class="flex items-center space-x-2 group">
          <div class="w-8 h-8 rounded-lg flex items-center justify-center">
            <img src="/images/logos/logo_creadores.png" alt="Logo" class="w-full h-full object-contain">
          </div>
          <span class="text-white font-gaming font-bold text-xl group-hover:text-primary transition-colors duration-300">
            CREADORES
          </span>
        </a>
      </div>

      <!-- Desktop Navigation -->
      <div class="hidden md:block">
        <div class="ml-10 flex items-baseline space-x-8">
          {navItems.map((item) => (
            <a
              href={item.href}
              class="text-text-secondary hover:text-primary px-3 py-2 rounded-md text-sm font-medium transition-all duration-300 hover:bg-background-secondary/50"
            >
              {item.label}
            </a>
          ))}
        </div>
      </div>

      <!-- Mobile menu button -->
      <div class="md:hidden">
        <button
          type="button"
          class="text-text-secondary hover:text-primary hover:bg-background-secondary/50 rounded-md p-2 transition-all duration-300"
          id="mobile-menu-button"
          aria-controls="mobile-menu"
          aria-expanded="false"
        >
          <span class="sr-only">Abrir menú principal</span>
          <svg class="block h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
          </svg>
        </button>
      </div>
    </div>
  </div>

  <!-- Mobile menu -->
  <div class="md:hidden hidden" id="mobile-menu">
    <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-background-secondary/50 backdrop-blur-md">
      {navItems.map((item) => (
        <a
          href={item.href}
          class="text-text-secondary hover:text-primary block px-3 py-2 rounded-md text-base font-medium transition-all duration-300 hover:bg-background-primary/50"
        >
          {item.label}
        </a>
      ))}
    </div>
  </div>
</nav>

<script>
  // Mobile menu toggle
  const mobileMenuButton = document.getElementById('mobile-menu-button');
  const mobileMenu = document.getElementById('mobile-menu');
  
  if (mobileMenuButton && mobileMenu) {
    mobileMenuButton.addEventListener('click', () => {
      const isExpanded = mobileMenuButton.getAttribute('aria-expanded') === 'true';
      mobileMenuButton.setAttribute('aria-expanded', (!isExpanded).toString());
      mobileMenu.classList.toggle('hidden');
    });
  }

  // Smooth scrolling for navigation links
  document.querySelectorAll('a[href^="#"]').forEach(anchor => {
    anchor.addEventListener('click', function (e) {
      e.preventDefault();
      const target = document.querySelector(this.getAttribute('href') || '');
      if (target) {
        target.scrollIntoView({
          behavior: 'smooth',
          block: 'start'
        });
        
        // Close mobile menu if open
        if (mobileMenu && !mobileMenu.classList.contains('hidden')) {
          mobileMenu.classList.add('hidden');
          mobileMenuButton?.setAttribute('aria-expanded', 'false');
        }
      }
    });
  });
</script> 